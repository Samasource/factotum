#!/bin/bash
# This go template is used to render the script that installs the
# See README.md for details, specifically section "How factotum
# bootstrapping, installation and launching works"

export DOCKER_IMAGE="{{.Env.DOCKER_IMAGE}}"
export DOCKER_TAG="{{.Env.DOCKER_TAG}}"
export DOCKER_IMAGE_TAG=$DOCKER_IMAGE:$DOCKER_TAG 
export APP_NAME=${APP_NAME:-$(basename $DOCKER_IMAGE)}
export INSTALL_PATH=${INSTALL_PATH:-/usr/local/bin}
export INSTALLER_NAME="${APP_NAME}-installer"
export OUTPUT=${OUTPUT:-/dev/null} # Replace with /dev/stdout to audit output

if [ -z "${DOCKER_IMAGE}" ]; then
	echo "Docker image cannot be empty" >&2
	exit 1
fi

if [ -z "${DOCKER_TAG}" ]; then
	DOCKER_TAG=latest
fi

if [ "${FACTOTUM_SHELL}" == "true" ]; then
	echo "Installer cannot be run from inside a geodesic shell" >&2
	exit 1
fi

# Check if docker is installed
which docker >/dev/null
if [ $? -ne 0 ]; then
	echo "Docker is required to run ${APP_NAME}" >&2
	exit 1
fi

# Check that we can connect to docker
docker ps >/dev/null 2>&1
if [ $? -ne 0 ]; then
	echo "Unable to communicate with docker daemon. Make sure your environment is properly configured and then try again." >&2
	exit 1
fi

# Check if tee is installed
which tee >/dev/null
if [ $? -ne 0 ]; then
	echo "Tee is required to install ${APP_NAME}" >&2
	exit 1
fi

# Check that we can write to install path
if [ ! -w "${INSTALL_PATH}" ]; then
	echo "Cannot write to ${INSTALL_PATH}. Please retry using sudo." 2>&1
	exit 1
fi

# Proceed with installation
echo "# Installing ${APP_NAME} from ${DOCKER_IMAGE_TAG}..."

# Check if HOME is defined
if [[ -z $HOME ]]; then
  echo "HOME is undefined" >&2
  exit 1
fi

# Create default config directories and files in home folder
FACTOTUM=$HOME/.factotum
mkdir -p $HOME/.ssh
mkdir -p $HOME/.aws
mkdir -p $FACTOTUM/inject
mkdir -p $FACTOTUM/bin
touch $HOME/.gitconfig
touch $HOME/.cfconfig

# Create default config.yaml, if absent
CONFIG_FILE=$FACTOTUM/config.yaml
if [[ ! -f $CONFIG_FILE ]]; then 
cat <<EOF > $CONFIG_FILE
{{ file.Read "/templates/install/config.yaml" | replaceAll "$" "\\$" }}
EOF
fi

# Sometimes docker might not exit cleanly
docker rm -f "${INSTALLER_NAME}" >/dev/null 2>&1

(docker run --name $INSTALLER_NAME --rm -e DOCKER_IMAGE -e DOCKER_TAG -e APP_NAME $DOCKER_IMAGE_TAG -c "gomplate -f /templates/install/factotum.gotmpl" | tee "${INSTALL_PATH}/${APP_NAME}" >${OUTPUT}) &&
	chmod 755 "${INSTALL_PATH}/${APP_NAME}"

if [ $? -eq 0 ]; then
	echo "# Installed ${APP_NAME} to ${INSTALL_PATH}/${APP_NAME}"
	exit 0
else
	echo "# Failed to install ${APP_NAME}"
	echo "# Please let us know by filling an issue on Github!"
	exit 1
fi
